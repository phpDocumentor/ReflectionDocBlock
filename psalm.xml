<?xml version="1.0"?>
<psalm
    totallyTyped="false"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="https://getpsalm.org/schema/config"
    xsi:schemaLocation="https://getpsalm.org/schema/config file:///composer/vendor/vimeo/psalm/config.xsd"
>
    <projectFiles>
        <directory name="src" />
        <ignoreFiles>
            <directory name="vendor" />
        </ignoreFiles>
    </projectFiles>

    <issueHandlers>
        <RedundantConditionGivenDocblockType>
            <errorLevel type="info">
                <!-- Psalm is very strict and believe that because we documented a type, it is redundant to assert it -->
                <file name="src/DocBlock/StandardTagFactory.php"/>
            </errorLevel>
        </RedundantConditionGivenDocblockType>

        <PossiblyNullArrayOffset>
            <errorLevel type="info">
                <!-- Psalm forbid accessing an array with a null offset but it's still working code without notice -->
                <file name="src/DocBlock/StandardTagFactory.php"/>
            </errorLevel>
        </PossiblyNullArrayOffset>

        <DeprecatedInterface>
            <errorLevel type="info">
                <!-- Will be removed in 6.0.0 issues/211 -->
                <referencedClass name="phpDocumentor\Reflection\DocBlock\Tags\Factory\StaticMethod"/>
            </errorLevel>
        </DeprecatedInterface>

        <RedundantConditionGivenDocblockType>
            <errorLevel type="info">
                <!-- Psalm manage to infer a more precise type than PHPStan. notNull assert is needed for PHPStan but
                Psalm sees it as redundant -->
                <directory name="src/DocBlock/Tags/"/>
            </errorLevel>
        </RedundantConditionGivenDocblockType>

        <ArgumentTypeCoercion>
            <errorLevel type="info">
                <!-- PHP handles invalid preg_split flags just fine. -->
                <file name="src/Utils.php"/>
            </errorLevel>
        </ArgumentTypeCoercion>
    </issueHandlers>
</psalm>
